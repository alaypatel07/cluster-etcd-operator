// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/openshift/cluster-etcd-operator/pkg/apis/etcd.openshift.io/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ClusterMemberLister helps list ClusterMembers.
type ClusterMemberLister interface {
	// List lists all ClusterMembers in the indexer.
	List(selector labels.Selector) (ret []*v1.ClusterMember, err error)
	// ClusterMembers returns an object that can list and get ClusterMembers.
	ClusterMembers(namespace string) ClusterMemberNamespaceLister
	ClusterMemberListerExpansion
}

// clusterMemberLister implements the ClusterMemberLister interface.
type clusterMemberLister struct {
	indexer cache.Indexer
}

// NewClusterMemberLister returns a new ClusterMemberLister.
func NewClusterMemberLister(indexer cache.Indexer) ClusterMemberLister {
	return &clusterMemberLister{indexer: indexer}
}

// List lists all ClusterMembers in the indexer.
func (s *clusterMemberLister) List(selector labels.Selector) (ret []*v1.ClusterMember, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ClusterMember))
	})
	return ret, err
}

// ClusterMembers returns an object that can list and get ClusterMembers.
func (s *clusterMemberLister) ClusterMembers(namespace string) ClusterMemberNamespaceLister {
	return clusterMemberNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ClusterMemberNamespaceLister helps list and get ClusterMembers.
type ClusterMemberNamespaceLister interface {
	// List lists all ClusterMembers in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.ClusterMember, err error)
	// Get retrieves the ClusterMember from the indexer for a given namespace and name.
	Get(name string) (*v1.ClusterMember, error)
	ClusterMemberNamespaceListerExpansion
}

// clusterMemberNamespaceLister implements the ClusterMemberNamespaceLister
// interface.
type clusterMemberNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ClusterMembers in the indexer for a given namespace.
func (s clusterMemberNamespaceLister) List(selector labels.Selector) (ret []*v1.ClusterMember, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ClusterMember))
	})
	return ret, err
}

// Get retrieves the ClusterMember from the indexer for a given namespace and name.
func (s clusterMemberNamespaceLister) Get(name string) (*v1.ClusterMember, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("clustermember"), name)
	}
	return obj.(*v1.ClusterMember), nil
}
